<?xml version="1.0"?>
<doc>
    <assembly>
        <name>com.TheSilentGroup.Fluorine</name>
    </assembly>
    <members>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.HostType">
            <summary>
            Defines the host type.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.BeginSend(System.Byte[])">
            <summary>
            Begin send data.
            </summary>
            <param name="buffer">
            Data to be sent.
            </param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.BeginReceive">
            <summary>
            Begin receive the data.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.BeginDisconnect">
            <summary>
            Begin disconnect the connection.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.Header">
            <summary>
            Connection service header.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.ConnectionId">
            <summary>
            Connection Session Id (GUID).
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.SocketHandle">
            <summary>
            Handle of the OS Socket.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.LocalEndPoint">
            <summary>
            Local socket endpoint.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.RemoteEndPoint">
            <summary>
            Remote socket endpoint.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket.HostType">
            <summary>
            Connection host type.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.Remoting.RemotingDestination">
            <summary>
            Summary description for RemotingDestination.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Destination">
            <summary>
            The Destination class is a source and sink for messages sent through 
            a service destination and uses an adapter to process messages.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.MessageBroker">
            <summary>
            All communication with the various services provided is mediated by the message broker.
            <br/><br/>
            It has a number of endpoints which send and receive messages over the network, and it has 
            a number of services that are message destinations. The broker routes messages to 
            endpoints based on the content type of those messages, and routes decoded messages 
            to services based on message type.
            The broker also has a means of calling back into the endpoints in order to push messages 
            back through them. 
            </summary>
            <example>
            A RemoteObject message arrives over the RTMP endpoint. The endpoint decodes 
            the message and sends it to the Message Broker, and the broker then passes it on to 
            the RemotingService which will perform the RemoteObject invocation. 
            </example>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageBroker.#ctor">
            <summary>
            Initializes a new instance of the MessageBroker class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageBroker.StartServices">
            <summary>
            Start all of the broker's services.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageBroker.StopServices">
            <summary>
            Stop all of the broker's services.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageBroker.StartEndpoints">
            <summary>
            Start all of the broker's endpoints.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageBroker.StopEndpoints">
            <summary>
            Stop all of the broker's endpoints.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageBroker.Start">
            <summary>
            Start the message broker.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageBroker.Stop">
            <summary>
            Stop the message broker.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageBroker.RouteMessage(com.TheSilentGroup.Fluorine.IApplicationContext,com.TheSilentGroup.Fluorine.Messaging.Messages.IMessage,com.TheSilentGroup.Fluorine.Messaging.Endpoints.IEndpoint)">
            <summary>
            Call this method in order to send a message from your code into the message routing system.
            The message is routed to a service that is defined to handle messages of this type.
            Once the service is identified, the destination property of the message is used to find a destination configured for that service.
            The adapter defined for that destination is used to handle the message.
            </summary>
            <param name="applicationContext"></param>
            <param name="message">The message to be routed to a service.</param>
            <param name="endpoint">This can identify the endpoint that is sending the message but it is currently not used so you may pass in null.</param>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpPacket">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpConnection">
            <summary>
            Summary description for RtmpConnection.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.ConnectionBase">
            <summary>
            Summary description for ConnectionBase.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.AttributeStore">
            <summary>
            Summary description for AttributeStore.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.DisposableBase">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.DisposableBase._disposed">
            <summary>
            Tracks whether Dispose has been called.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.DisposableBase.Finalize">
            <summary>
            Finalizer.
            Do not provide destructors in types derived from this class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.DisposableBase.Dispose(System.Boolean)">
            <summary>
            Dispose executes in two distinct scenarios:
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.DisposableBase.Free">
            <summary>
            Free managed resources.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.DisposableBase.FreeUnmanaged">
            <summary>
            Free managed resources.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IAttributeStore">
            <summary>
            Summary description for IAttributeStore.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.AttributeStore.TransientPrefix">
            <summary>
            Prefix for attribute names that should not be made persistent. 
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IConnection">
            <summary>
            Summary description for IConnection.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.ICoreObject">
            <summary>
            Summary description for ICoreObject.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Event.IEventDispatcher">
            <summary>
            Summary description for IEventDispatcher.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Event.IEventHandler">
            <summary>
            Summary description for IEventHandler.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Event.IEventListener">
            <summary>
            Summary description for IEventListener.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpConnection.Persistent">
            <summary>
            Persistent connection type, eg RTMP.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpConnection.Polling">
            <summary>
            Polling connection type, eg RTMPT.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpConnection.Transient">
            <summary>
            Transient connection type, eg Remoting, HTTP, etc.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler">
            <summary>
            Summary description for IScopeHandler.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.Start(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope)">
            <summary>
            Called when a scope is created for the first time.
            </summary>
            <param name="scope">The new scope object.</param>
            <returns><code>true</code> to allow, <code>false</code> to deny.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.Stop(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope)">
            <summary>
            Called just before a scope is disposed.
            </summary>
            <param name="scope"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.Connect(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IConnection,com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope,System.Object[])">
            <summary>
            Called just before every connection to a scope. You can pass additional
            parameters from client using <code>NetConnection.connect</code> method (see
            below).
            </summary>
            <param name="connection">Connection object.</param>
            <param name="scope"></param>
            <param name="parameters">List of params passed from client via <code>NetConnection.connect</code> method. All parameters but the first one passed to <code>NetConnection.connect</code> method are available as parameters array.</param>
            <returns><code>true</code> to allow, <code>false</code> to deny.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.Disconnect(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IConnection,com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope)">
            <summary>
            Called just after the a connection is disconnected.
            </summary>
            <param name="connection">Connection object.</param>
            <param name="scope">Scope object.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.AddChildScope(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IBasicScope)">
            <summary>
            Called just before a child scope is added.
            </summary>
            <param name="scope">Scope that will be added.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.RemoveChildScope(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IBasicScope)">
            <summary>
            Called just after a child scope has been removed.
            </summary>
            <param name="scope">Scope that has been removed.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.Join(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IClient,com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope)">
            <summary>
            Called just before a client enters the scope.
            </summary>
            <param name="client">Client object.</param>
            <param name="scope"></param>
            <returns><code>true</code> to allow, <code>false</code> to deny connection.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.Leave(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IClient,com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope)">
            <summary>
            Called just after the client leaves the scope.
            </summary>
            <param name="client">Client object.</param>
            <param name="scope">Scope object.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeHandler.ServiceCall(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IConnection,com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceCall)">
            <summary>
            Called when a service is called.
            </summary>
            <param name="connection">Connection object.</param>
            <param name="call">Call object.</param>
            <returns><code>true</code> to allow, <code>false</code> to deny.</returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.EndpointBase">
            <summary>
            Summary description for EndpointBase.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.IEndpoint">
            <summary>
            Summary description for IEndpoint.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.DotNetAdapter">
            <summary>
            Summary description for DotNetAdapter.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.ServiceAdapter">
            <summary>
            The ServiceAdapter class is the base definition of a service adapter.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.IAdapter">
            <summary>
            Summary description for IAdapter.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Config.SecuritySettings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Config.SecuritySettings._destinationSettings">
            <summary>
            Null for global security settings.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Config.MetadataSettings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Exceptions.UnexpectedAMF">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Exceptions.FluorineException">
            <summary>
            The exception that is the base class for Fluorine exceptions.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.FluorineException.#ctor">
            <summary>
            Initializes a new instance of the FluorineException class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.FluorineException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FluorineException class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>			
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.FluorineException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the FluorineException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>	
            <remarks>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the InnerException property. The InnerException property returns the same value that is passed into the constructor, or a null reference (Nothing in Visual Basic) if the InnerException property does not supply the inner exception value to the constructor.</remarks>			
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.FluorineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the FluorineException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.UnexpectedAMF.#ctor">
            <summary>
            Initializes a new instance of the UnexpectedAMF class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Diagnostic.DescribeService">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.Identity">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.ArrayCollectionConverter">
            <summary>
            Provides a type converter to convert ArrayCollection objects to and from various other representations.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ArrayCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overloaded. Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A Type that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ArrayCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.ArrayCollection">
            <summary>
            Flex ArrayCollection class. The ArrayCollection class is a wrapper class that exposes an Array as a collection.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.IExternalizable">
            <summary>
            The IExternalizable interface provides control over serialization of a class as it is encoded into a data stream.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IExternalizable.ReadExternal(com.TheSilentGroup.Fluorine.AMF3.IDataInput)">
            <summary>
            A class implements this method to decode itself from a data stream by calling the methods of the IDataInput interface. 
            </summary>
            <param name="input">Input data stream.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IExternalizable.WriteExternal(com.TheSilentGroup.Fluorine.AMF3.IDataOutput)">
            <summary>
            A class implements this method to encode itself for a data stream by calling the methods of the IDataOutput interface.
            </summary>
            <param name="output">Output data stream.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ArrayCollection.#ctor">
            <summary>
            Initializes a new instance of the ArrayCollection class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ArrayCollection.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the ArrayCollection class.
            </summary>
            <param name="list"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Activation.SessionActivator">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Activation.IActivator">
            <summary>
            Activator interface.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Activation.IActivator.Activate(com.TheSilentGroup.Fluorine.IApplicationContext,System.Type)">
            <summary>
            Activate instance of requested type.
            </summary>
            <param name="applicationContext">The application context.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Activation.IActivator.Activate(com.TheSilentGroup.Fluorine.IApplicationContext,System.Type,System.Object[])">
            <summary>
            Activate instance of requested type.
            </summary>
            <param name="applicationContext">The application context.</param>
            <param name="type">The type.</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Activation.IActivator.ActivationMode">
            <summary>
            Gets the activation mode.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocketService">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocketService.OnConnected(com.TheSilentGroup.Fluorine.SystemHelpers.Net.ConnectionEventArgs)">
            <summary>
            Fired when connected.
            </summary>
            <param name="e">
            Information about the connection.
            </param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocketService.OnReceived(com.TheSilentGroup.Fluorine.SystemHelpers.Net.MessageEventArgs)">
            <summary>
            Fired when data arrives.
            </summary>
            <param name="e">
            Information about the Message.
            </param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocketService.OnSent(com.TheSilentGroup.Fluorine.SystemHelpers.Net.MessageEventArgs)">
            <summary>
            Fired when data is sent.
            </summary>
            <param name="e">
            Information about the Message.
            </param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocketService.OnDisconnected(com.TheSilentGroup.Fluorine.SystemHelpers.Net.DisconnectedEventArgs)">
            <summary>
            Fired when disconnected.
            </summary>
            <param name="e">
            Information about the connection.
            </param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ConnectionEventArgs">
            <summary>
            Base event arguments for connection events.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.DisconnectedEventArgs">
            <summary>
            Disconnect event arguments for disconnected event.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.MessageEventArgs">
            <summary>
            Message event arguments for message events.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.MessageService">
            <summary>
            The MessageService class is the Service implementation that manages 
            point-to-point and publish-subscribe messaging.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.ServiceBase">
            <summary>
            Summary description for ServiceBase.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.IService">
            <summary>
            The MessageBroker has endpoints on one end and services on the other.
            The Service interface defines the contract between the MessageBroker 
            and all Service implementations.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Services.IService.GetMessageBroker">
            <summary>
            All services must be managed by a single MessageBroker, and must be capable of 
            returning a reference to that broker. This broker is used when a service wishes 
            to push a message to one or more endpoints managed by the broker. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Services.IService.GetDestination(com.TheSilentGroup.Fluorine.Messaging.Messages.IMessage)">
            <summary>
            Retrieves the destination in this service for which the given message is intended.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Services.IService.ServiceMessage(com.TheSilentGroup.Fluorine.IApplicationContext,com.TheSilentGroup.Fluorine.Messaging.Messages.IMessage)">
            <summary>
            Handles a message routed to the service by the MessageBroker.
            </summary>
            <param name="message">The message sent by the MessageBroker.</param>
            <param name="applicationContext">The application context.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Services.IService.IsSupportedMessage(com.TheSilentGroup.Fluorine.IApplicationContext,com.TheSilentGroup.Fluorine.Messaging.Messages.IMessage)">
            <summary>
            Determines whether this Service is capable of handling a given Message instance.
            </summary>
            <param name="message"></param>
            <param name="applicationContext">The application context.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Services.IService.IsSupportedMessageType(com.TheSilentGroup.Fluorine.IApplicationContext,System.String)">
            <summary>
            Determines whether this Service is capable of handling messages of a given type.
            </summary>
            <param name="messageClassName"></param>
            <param name="applicationContext">The application context.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Services.IService.Start">
            <summary>
            Performs any startup actions necessary after the service has been added to the broker.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Services.IService.Stop">
            <summary>
            Performs any actions necessary before removing the service from the broker.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage">
            <summary>
            A message that represents an infrastructure command passed between client and server. 
            Subscribe/unsubscribe operations result in CommandMessage transmissions, as do polling 
            operations.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Messages.AsyncMessage">
            <summary>
            AsyncMessage contains information necessary to perform point-to-point or publish-subscribe messaging.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase">
            <summary>
            Base class for all messages. Messages have two customizable sections; headers and body. The headers property provides access to specialized meta information for a specific message instance. The headers property is an associative array with the specific header name as the key.
            <br/><br/>
            The body of a message contains the instance specific data that needs to be delivered and processed by the remote destination. The body is an object and is the payload for a message. 
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Messages.IMessage">
            <summary>
            Summary description for IMessage.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.DestinationClientIdHeader">
            <summary>
            Messages pushed from the server may arrive in a batch, with messages in the batch potentially targeted to different Consumer instances.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.EndpointHeader">
            <summary>
            Messages are tagged with the endpoint id for the Channel they are sent over.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.RemoteCredentialsHeader">
            <summary>
            Messages that need to set remote credentials for a destination carry the Base64 encoded credentials in this header.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.RequestTimeoutHeader">
            <summary>
            Messages sent with a defined request timeout use this header.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.#ctor">
            <summary>
            Initializes a new instance of the MessageBase class.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.clientId">
            <summary>
            Gets or sets the clientId (which MessageAgent sent the message).
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.destination">
            <summary>
            Gets or sets the message destination.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.messageId">
            <summary>
            Gets or sets the unique id for the message.
            </summary>
            <remarks>
            The message id can be used to correlate a response to the original request message in request-response messaging scenarios.
            </remarks>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.timestamp">
            <summary>
            Gets or sets the time stamp for the message.
            </summary>
            <remarks>
            A time stamp is the date and time that the message was sent. The time stamp is used for tracking the message through the system, ensuring quality of service levels and providing a mechanism for message expiration. 
            </remarks>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.timeToLive">
            <summary>
            Gets or sets the time to live value of a message.
            </summary>
            <remarks>
            The time to live value of a message indicates how long the message should be considered valid and deliverable.
            This value works in conjunction with the timestamp value. Time to live is the number of 
            milliseconds that this message remains valid starting from the specified timestamp value. 
            For example, if the timestamp value is 04/05/05 1:30:45 PST and the timeToLive value 
            is 5000, then this message will expire at 04/05/05 1:30:50 PST. 
            Once a message expires it will not be delivered to any other clients. 
            </remarks>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.body">
            <summary>
            Gets or sets the body of a message.
            </summary>
            <remarks>The body contains the specific data that needs to be delivered by the remote destination.</remarks>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.MessageBase.headers">
            <summary>
            Gets or sets the headers of a message.
            </summary>
            <remarks>
            The headers of a message are an associative array where the key is the header name and the value is the header value.
            This property provides access to the specialized meta information for the specific message instance. 
            Core header names begin with a 'DS' prefix. Custom header names should start with a unique prefix to avoid name collisions.
            </remarks>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.AsyncMessage.SubtopicHeader">
            <summary>
            Messages sent by a MessageAgent with a defined subtopic property indicate their target subtopic in this header.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Messages.AsyncMessage.#ctor">
            <summary>
            Initializes a new instance of the AsyncMessage class.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.AsyncMessage.correlationId">
            <summary>
            Gets or sets the correlation id of the message.
            </summary>
            <remarks>
            Used for acknowledgement and for segmentation of messages. The correlationId contains the messageId of the previous message that this message refers to.
            </remarks>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.ClientPingOperation">
            <summary>
            This operation is used to test connectivity over the current channel to the remote endpoint.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.SubscribeOperation">
            <summary>
            This operation is used to subscribe to a remote destination.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.UnsubscribeOperation">
            <summary>
            This operation is used to unsubscribe from a remote destination.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.UnknownOperation">
            <summary>
            This is the default operation for new CommandMessage instances. 
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.PollOperation">
            <summary>
            This operation is used to poll a remote destination for pending, undelivered messages.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.ClientSyncOperation">
            <summary>
            This operation is used by a remote destination to sync missed or cached messages back to a client as a result of a client issued poll command.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.ClusterRequestOperation">
            <summary>
            This operation is used to request a list of failover endpoint URIs for the remote destination based on cluster membership.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.LoginOperation">
            <summary>
            This operation is used to send credentials to the endpoint so that the user can be 
            logged in over the current channel. The credentials need to be Base64 encoded and 
            stored in the body of the message.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.LogoutOperation">
            <summary>
            This operation is used to log the user out of the current channel, and will 
            invalidate the server session if the channel is HTTP based. 
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.SessionInvalidateOperation">
            <summary>
            This operation is used to indicate that the client's session with a remote destination has timed out.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.SelectorHeader">
            <summary>
            The name for the selector header in subscribe messages.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.SessionInvalidatedHeader">
            <summary>
            The name for the header used internaly on the server to indicate that an 
            unsubscribe message is due to a client session being invalidated. 
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.#ctor">
            <summary>
            Initializes a new instance of the CommandMessage class.
            The message id is set to a universally unique 
            value, and the timestamp for the message is set to the current system timestamp. 
            The operation is set to a default value of UnknownOperation.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the CommandMessage class. The message id is set to a 
            universally unique value, and the timestamp for the message is set 
            to the current system timestamp.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.messageRefType">
            <summary>
            Gets or sets the message reference type for the CommandMessage.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.CommandMessage.operation">
            <summary>
            Gets or sets the operation for this CommandMessage.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.MessageDestination">
            <summary>
            Summary description for MessageDestination.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpMessage">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Event.IRtmpEvent">
            <summary>
            Summary description for IRtmpEvent.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Event.IEvent">
            <summary>
            Summary description for IEvent.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject">
            <summary>
            Summary description for ISharedObject.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IBasicScope">
            <summary>
            Summary description for IBasicScope.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Event.IEventObservable">
            <summary>
            Summary description for IEventObservable.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistable">
            <summary>
            Summary description for IPersistable.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.SendMessage(System.String,System.Collections.IList)">
            <summary>
            Sends a message to a handler of the shared object.
            </summary>
            <param name="handler">The name of the handler to call.</param>
            <param name="arguments">A list of objects that should be passed as arguments to the handler.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.BeginUpdate">
            <summary>
            Start performing multiple updates to the shared object from serverside code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.BeginUpdate(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Event.IEventListener)">
            <summary>
            Start performing multiple updates to the shared object from a connected client.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.EndUpdate">
            <summary>
            The multiple updates are complete, notify clients about all changes at once.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.AddSharedObjectListener(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObjectListener)">
            <summary>
            Register object that will be notified about update events.
            </summary>
            <param name="listener">The object to notify.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.RemoveSharedObjectListener(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObjectListener)">
            <summary>
            Unregister object to not longer receive update events.
            </summary>
            <param name="listener">The object to unregister.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.Lock">
            <summary>
            Locks the shared object instance. Prevents any changes to this object by
            clients until the SharedObject.unlock() method is called.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.Unlock">
            <summary>
            Unlocks a shared object instance that was locked with SharedObject.Lock().
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.Clear">
            <summary>
            Deletes all the attributes and sends a clear event to all listeners. The
            persistent data object is also removed from a persistent shared object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.Close">
            <summary>
            Detaches a reference from this shared object, this will destroy the
            reference immediately. This is useful when you don't want to proxy a
            shared object any longer.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.Version">
            <summary>
            Returns the version of the shared object. The version is incremented
            automatically on each modification.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.IsPersistentObject">
            <summary>
            Checks if the object has been created as persistent shared object by the client.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.Data">
            <summary>
            Returns a map containing all attributes of the shared object.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObject.IsLocked">
            <summary>
            Returns the locked state of this SharedObject.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.ServiceCall">
            <summary>
            Summary description for ServiceCall.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceCall">
            <summary>
            Summary description for IServiceCall.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceInvoker">
            <summary>
            Summary description for IServiceInvoker.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceInvoker.Invoke(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceCall,com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope)">
            <summary>
            Execute the passed service call in the given scope.  This looks up the
            handler for the call in the scope and the context of the scope.
            </summary>
            <param name="call"></param>
            <param name="scope"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceInvoker.Invoke(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceCall,System.Object)">
            <summary>
            Execute the passed service call in the given object.
            </summary>
            <param name="call"></param>
            <param name="service"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.BasicScopeEnumerator">
            <summary>
            Summary description for BasicScopeEnumerator.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.ServiceMap">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.TransientAttribute">
            <summary>
            Indicates that serialization is turned off on a certain field or property.
            Member variables marked by the transient attribute are not transferred.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.TransientAttribute.#ctor">
            <summary>
            Initializes a new instance of the TransientAttribute class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.RemotingServiceAttribute">
            <summary>
            Indicates whether a type is a remoting service. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.RemotingServiceAttribute.#ctor">
            <summary>
            Initializes a new instance of the RemotingServiceAttribute class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.RemotingServiceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RemotingServiceAttribute class.
            </summary>
            <param name="serviceName">Specifies a description for the remoting service.</param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.DataOutput">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.IDataOutput">
            <summary>
            The IDataOutput interface provides a set of methods for writing binary data. 
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteBoolean(System.Boolean)">
            <summary>
            Writes a Boolean value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteByte(System.Byte)">
            <summary>
            Writes a byte.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of length bytes from the specified byte array, bytes, starting offset(zero-based index) bytes into the byte stream.
            </summary>
            <param name="bytes"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteDouble(System.Double)">
            <summary>
            Writes an IEEE 754 double-precision (64-bit) floating point number.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteFloat(System.Single)">
            <summary>
            Writes an IEEE 754 single-precision (32-bit) floating point number.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteInt(System.Int32)">
            <summary>
            Writes a 32-bit signed integer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteObject(System.Object)">
            <summary>
            Writes an object to the byte stream or byte array in AMF serialized format.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteShort(System.Int16)">
            <summary>
            Writes a 16-bit integer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteUnsignedInt(System.UInt32)">
            <summary>
            Writes a 32-bit unsigned integer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteUTF(System.String)">
            <summary>
            Writes a UTF-8 string to the byte stream.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataOutput.WriteUTFBytes(System.String)">
            <summary>
            Writes a UTF-8 string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteBoolean(System.Boolean)">
            <summary>
            Writes a Boolean value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteByte(System.Byte)">
            <summary>
            Writes a byte.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of length bytes from the specified byte array, bytes, starting offset(zero-based index) bytes into the byte stream.
            </summary>
            <param name="bytes"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteDouble(System.Double)">
            <summary>
            Writes an IEEE 754 double-precision (64-bit) floating point number.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteFloat(System.Single)">
            <summary>
            Writes an IEEE 754 single-precision (32-bit) floating point number.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteInt(System.Int32)">
            <summary>
            Writes a 32-bit signed integer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteObject(System.Object)">
            <summary>
            Writes an object to the byte stream or byte array in AMF serialized format.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteShort(System.Int16)">
            <summary>
            Writes a 16-bit integer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteUnsignedInt(System.UInt32)">
            <summary>
            Writes a 32-bit unsigned integer.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteUTF(System.String)">
            <summary>
            Writes a UTF-8 string to the byte stream. 
            The length of the UTF-8 string in bytes is written first, as a 16-bit integer, followed by 
            the bytes representing the characters of the string.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataOutput.WriteUTFBytes(System.String)">
            <summary>
            Writes a UTF-8 string. Similar to writeUTF, but does not prefix the string with a 16-bit length word.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.MethodHandler">
            <summary>
            Summary description for MethodHandler.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.Messaging.SubscriptionManager">
            <summary>
            Summary description for SubscriptionManager.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Security.ILoginCommand">
            <summary>
            Custom login adapter interface used for custom authentication.
            Checks a user's credentials and retrieves a principal for the gateway.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.ILoginCommand.Start">
            <summary>
            Called to initialize a login command prior to authentication/authorization requests.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.ILoginCommand.Stop">
            <summary>
            Called to free up resources used by the login command.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.ILoginCommand.Logout(System.Security.Principal.IPrincipal)">
            <summary>
            Attempts to log a user out from their session.
            </summary>
            <param name="principal">The principal to logout.</param>
            <returns>A Boolean value indicating whether the principal has been logged out.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.ILoginCommand.DoAuthorization(System.Security.Principal.IPrincipal,System.Collections.IList)">
            <summary>
            The gateway calls this method to perform programmatic authorization.
            </summary>
            <param name="principal">The principal being checked for authorization.</param>
            <param name="roles">A List of role names to check, all members should be strings.</param>
            <returns>A Boolean value indicating whether the principal has been authorized.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.ILoginCommand.DoAuthentication(System.String,System.Collections.Hashtable)">
            <summary>
            The gateway calls this method to perform programmatic, custom authentication.
            </summary>
            <param name="username">The principal being authenticated.</param>
            <param name="credentials">The credentials are passed as a Hashtable to allow for extra properties to be passed in the future. For now, only a "password" property is sent.</param>
            <returns>A principal object represents the security context of the user.</returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Server">
            <summary>
            Summary description for Server.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IServer">
            <summary>
            Summary description for IServer.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IServer.GetGlobal(System.String)">
            <summary>
            Gets the global scope with a given name.
            </summary>
            <param name="name">The name of the global scope.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IServer.RegisterGlobal(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IGlobalScope)">
            <summary>
            Register a global scope.
            </summary>
            <param name="scope">The global scope to register.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IServer.LookupGlobal(System.String,System.String)">
            <summary>
            Lookup the global scope for a host.
            </summary>
            <param name="hostName">The name of the host.</param>
            <param name="contextPath">The path in the host.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IServer.AddMapping(System.String,System.String,System.String)">
            <summary>
            Map a virtual hostname and a path to the name of a global scope.
            </summary>
            <param name="hostName">The name of the host to map.</param>
            <param name="contextPath"></param>
            <param name="globalName">The name of the global scope to map to.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IServer.RemoveMapping(System.String,System.String)">
            <summary>
            Unregister a previously mapped global scope.
            </summary>
            <param name="hostName"></param>
            <param name="contextPath"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IServer.GetGlobalNames">
            <summary>
            Gets list of global scope names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IServer.GetGlobalScopes">
            <summary>
            Get list of global scopes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.GlobalScope">
            <summary>
            Summary description for GlobalScope.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Scope">
            <summary>
            Summary description for Scope.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.BasicScope">
            <summary>
            Summary description for BasicScope.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.PersistableAttributeStore">
            <summary>
            Summary description for PersistableAttributeStore.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.BasicScope.IsApplication(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IBasicScope)">
            <summary>
            Check whether scope is an application scope (level 1 leaf in scope tree) or not
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.BasicScope.IsRoom(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IBasicScope)">
            <summary>
            Check whether scope is a room scope (level 2 leaf in scope tree or lower, e.g. 3, 4, ...) or not
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope">
            <summary>
            Summary description for IScope.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceHandlerProvider">
            <summary>
            Summary description for IServiceHandlerProvider.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceHandlerProvider.RegisterServiceHandler(System.String,System.Object)">
            <summary>
            Register an object that provides methods which can be called from a client.
            
            <p>
            Example:<br/>
            If you registered a handler with the name "<code>one.two</code>" that
            provides a method "<code>callMe</code>", you can call a method
            "<code>one.two.callMe</code>" from the client.</p>
            </summary>
            <param name="name">The name of the handler.</param>
            <param name="handler">The handler object.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceHandlerProvider.UnregisterServiceHandler(System.String)">
            <summary>
            Unregister service handler.
            </summary>
            <param name="name">The name of the handler.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceHandlerProvider.GetServiceHandler(System.String)">
            <summary>
            Returns a previously registered service handler.
            </summary>
            <param name="name">The name of the handler to return.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IServiceHandlerProvider.GetServiceHandlerNames">
            <summary>
            Gets a list of registered service handler names.
            </summary>
            <returns>Return the names of the registered handlers.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.Connect(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IConnection)">
            <summary>
            Adds given connection to the scope.
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.Disconnect(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IConnection)">
            <summary>
            Removes given connection from list of scope connections. This disconnects
            all clients of given connection from the scope.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.HasChildScope(System.String)">
            <summary>
            Check to see if this scope has a child scope matching a given name.
            </summary>
            <param name="name">The name of the child scope.</param>
            <returns><code>true</code> if a child scope exists, otherwise <code>false</code></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.HasChildScope(System.String,System.String)">
            <summary>
            Checks whether scope has a child scope with given name and type.
            </summary>
            <param name="type">Child scope type.</param>
            <param name="name">Child scope name.</param>
            <returns><code>true</code> if a child scope exists, otherwise <code>false</code></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.CreateChildScope(System.String)">
            <summary>
            Creates child scope with name given and returns success value.
            </summary>
            <param name="name">New child scope name.</param>
            <returns><code>true</code> if child scope was successfully creates, <code>false</code> otherwise.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.AddChildScope(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IBasicScope)">
            <summary>
            Adds scope as a child scope.
            </summary>
            <param name="scope">Add the specified scope.</param>
            <returns><code>true</code> if child scope was successfully added, <code>false</code> otherwise</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.RemoveChildScope(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IBasicScope)">
            <summary>
            Removes scope from the children scope list.
            </summary>
            <param name="scope">Removes the specified scope.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.GetScopeNames">
            <summary>
            Gets the child scope names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.GetBasicScope(System.String,System.String)">
            <summary>
            Gets a child scope by name.
            </summary>
            <param name="type"></param>
            <param name="name">Name of the child scope.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.GetClients">
            <summary>
            Gets a set of connected clients.
            </summary>
            <returns></returns>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.Context">
            <summary>
            Returns scope context.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.HasHandler">
            <summary>
            Checks whether scope has handler or not.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.Handler">
            <summary>
            Returns handler of the scope.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope.ContextPath">
            <summary>
            Returns context path.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Scope._children">
            <summary>
            String, IBasicScope
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Scope._clients">
            <summary>
            IClient, Set(IConnection)
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Scope.RegisterServiceHandler(System.String,System.Object)">
            <summary>
            Register an object that provides methods which can be called from a client.
            
            <p>
            Example:<br/>
            If you registered a handler with the name "<code>one.two</code>" that
            provides a method "<code>callMe</code>", you can call a method
            "<code>one.two.callMe</code>" from the client.</p>
            </summary>
            <param name="name">The name of the handler.</param>
            <param name="handler">The handler object.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Scope.UnregisterServiceHandler(System.String)">
            <summary>
            Unregister service handler.
            </summary>
            <param name="name">The name of the handler.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Scope.GetServiceHandler(System.String)">
            <summary>
            Returns a previously registered service handler.
            </summary>
            <param name="name">The name of the handler to return.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Scope.GetServiceHandlerNames">
            <summary>
            Gets a list of registered service handler names.
            </summary>
            <returns>Return the names of the registered handlers.</returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IGlobalScope">
            <summary>
            Summary description for IGlobalScope.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.CoreHandler">
            <summary>
            Summary description for CoreHandler.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.PendingCall">
            <summary>
            Summary description for PendingCall.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IPendingServiceCall">
            <summary>
            Summary description for IPendingServiceCall.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Invocation.IInvocationCallback">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.Messages.PagedMessage">
            <summary>
            This messsage provides information about a partial sequence result.
            When paging is enabled for a destination and DataService.fill() or a page request 
            is made the remote destination will return this message as a response.
            The body property is an Array containing the items for the requested page with a 
            length of the configured page size.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.Messages.SequencedMessage">
            <summary>
            Clients receive this message in response to DataService.fill() request. 
            The body of the message is an Array of items that were returned from 
            the remote destination based on the fill parameters.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Messages.AcknowledgeMessage">
            <summary>
            Summary description for AcknowledgeMessage.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.SequencedMessage.sequenceId">
            <summary>
            Provides access to the sequence id for this message. 
            The sequence id is a unique identifier for a sequence within a remote destination. 
            This value is only unique for the endpoint and destination contacted. 
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.SequencedMessage.sequenceSize">
            <summary>
            Provides access to the sequence size for this message.
            The sequence size indicates how many items reside in the remote sequence. 
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.PagedMessage.pageCount">
            <summary>
            Provides access to the number of total pages in a sequence based on the current page size.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.PagedMessage.pageIndex">
            <summary>
            Provides access to the index of the current page in a sequence.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.RoleAttribute">
            <summary>
            Indicates a declarative security check on a service method.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.RoleAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RoleAttribute class.
            </summary>
            <param name="roles">Comma-separated list of roles.</param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.RoleAttribute.Roles">
            <summary>
            Gets the comma-separated list of roles.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.MessageClient">
            <summary>
            Summary description for MessageClient.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Config.ServiceSettings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Config.AdapterSettings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.DateWrapper">
            <summary>
            Helper class used for date, timezone management.
            </summary>
            <remarks>DateWrapper uses time zone in the last Date encountered during unserialization.</remarks>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.DateWrapper.#ctor">
            <summary>
            Initializes a new instance of the DateWrapper class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.DateWrapper.GetClientDate(System.DateTime)">
            <summary>
            Get the date according to client timezone.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.DateWrapper.GetServerDate(System.DateTime)">
            <summary>
            Get the date according to server timezone.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.DateWrapper.ClientTimeZone">
            <summary>
            Gets the client time zone.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.DateWrapper.ServerTimeZone">
            <summary>
            Gets the server time zone.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.DataDestination">
            <summary>
            Summary description for DataDestination.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.IServerSocket">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.IServerSocket.BeginSendToAll(System.Byte[])">
            <summary>
            Begin send data to all server connections.
            </summary>
            <param name="buffer">
            Data to be sent.
            </param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.IServerSocket.BeginSendTo(com.TheSilentGroup.Fluorine.SystemHelpers.Net.ISocket,System.Byte[])">
            <summary>
            Begin send data to the connection.
            </summary>
            <param name="connection">
            The connection that the data will be sent.
            </param>
            <param name="buffer">
            Data to be sent.
            </param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.IServerSocket.GetConnectionById(System.String)">
            <summary>
            Get the connection from the connectionId
            </summary>
            <param name="connectionId">
            The connectionId.
            </param>
            <returns>
            ISocketConnection to use.
            </returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.IO.MemoryStreamEx">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpContext">
            <summary>
            Summary description for RtmpContext.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Event.ChunkSize">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistenceStore">
            <summary>
            Storage for persistent objects.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistenceStore.Save(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistable)">
            <summary>
            Make the passed object persistent.
            </summary>
            <param name="obj">The object to store.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistenceStore.Load(System.String)">
            <summary>
            Load a persistent object with the given name.  The object must provide
            either a constructor that takes an input stream as only parameter or an
            empty constructor so it can be loaded from the persistence store.
            </summary>
            <param name="name">The name of the object to load.</param>
            <returns>The loaded object or <code>null</code> if no such object was found.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistenceStore.Load(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistable)">
            <summary>
            Load state of an already instantiated persistent object.
            </summary>
            <param name="obj">The object to initialize.</param>
            <returns>true if the object was initialized, false otherwise.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistenceStore.Remove(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistable)">
            <summary>
            Delete the passed persistent object.
            </summary>
            <param name="obj">The object to delete.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistenceStore.Remove(System.String)">
            <summary>
            Delete the persistent object with the given name.
            </summary>
            <param name="name">The name of the object to delete.</param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistenceStore.GetObjectNames">
            <summary>
            Return iterator over the names of all already loaded objects in the storage.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Persistence.IPersistenceStore.GetObjects">
            <summary>
            Return iterator over the already loaded objects in the storage.
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.AdapterBase">
            <summary>
            Summary description for AdapterBase.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeAware">
            <summary>
            Summary description for IScopeAware.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeAware.SetScope(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope)">
            <summary>
            Sets the scope the object is located in.
            </summary>
            <param name="scope">Scope for this object.</param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Config.NetworkSettings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Logging.FluorineLogger.Log(System.Object,System.String,System.Exception)">
            <summary>
            Returns true if an external event already handled the log
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.WsdlFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.AbstractFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.IFilter">
            <summary>
            Summary description for IFilter.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.IFilter.Invoke(com.TheSilentGroup.Fluorine.Gateway.AMFContext)">
            <summary>
            Invokes the filter.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Filter.IFilter.Next">
            <summary>
            Gets or sets the next filter.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.AbstractFilter.#ctor">
            <summary>
            Initializes a new instance of the AbstractFilter class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.WsdlFilter.#ctor">
            <summary>
            Initializes a new instance of the WsdlFilter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.ASObject">
            <summary>
            The ASObject class represents a Flash object.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ASObject.#ctor">
            <summary>
            Initializes a new instance of the ASObject class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ASObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ASObject class.
            </summary>
            <param name="typeName">Typed object type name.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ASObject.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the ASObject class.
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ASObject.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the ASObject class.
            </summary>
            <param name="nameValueCollection"></param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.ASObject.TypeName">
            <summary>
            Gets or sets the type name for a typed object.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.ASObject.IsTypedObject">
            <summary>
            Gets the Boolean value indicating whether the ASObject is typed.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMFMessage">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFMessage.#ctor">
            <summary>
            Initializes a new instance of the AMFMessage class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFMessage.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the AMFMessage class.
            </summary>
            <param name="version"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Activation.ObjectFactory">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Activation.ApplicationActivator">
            <summary>
            ApplicationActivator handles application level object activations.<br/>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Activation.ApplicationActivator.#ctor">
            <summary>
            Initializes a new instance of the ApplicationActivator class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Runtime.Serialization.Formatters.Binary.AmfFormatter">
            <summary>
            Summary description for AmfFormatter.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.SocketServer">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.SocketServer.BeginReceive(com.TheSilentGroup.Fluorine.SystemHelpers.Net.ServerSocketConnection)">
            <summary>
            Receive data from connetion.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.SocketServer.BeginSend(com.TheSilentGroup.Fluorine.SystemHelpers.Net.ServerSocketConnection,System.Byte[])">
            <summary>
            Begin send the data.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Net.SocketServer.BeginSendCallback(System.IAsyncResult)">
            <summary>
            Send Callback.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ServerErrorEventArgs">
            <summary>
            Base event arguments for connection events.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.CallbackData">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.ClientRegistry">
            <summary>
            Summary description for ClientRegistry.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IClientRegistry">
            <summary>
            Summary description for IClientRegistry.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IClientRegistry.HasClient(System.String)">
            <summary>
            Check if a client with a given id exists.
            </summary>
            <param name="id">The id of the client to check for.</param>
            <returns><code>true</code> if the client exists, <code>false</code> otherwise.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IClientRegistry.NewClient(System.Object[])">
            <summary>
            Create a new client client object from connection parameters.
            </summary>
            <param name="parameters">The parameters the client passed during connection.</param>
            <returns>The new client.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IClientRegistry.LookupClient(System.String)">
            <summary>
            Return an existing client from a client id.
            </summary>
            <param name="id">The id of the client to return.</param>
            <returns>The client object.</returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Config.ChannelSettings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.FluorineGateway">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.FluorineGateway.#ctor">
            <summary>
            Initializes a new instance of the FluorineGateway class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.FluorineGateway.Init(System.Web.HttpApplication)">
            <summary>
            Initializes the module and prepares it to handle requests.
            </summary>
            <param name="application">An HttpApplication that provides access to the methods, properties, and events common to all application objects within an ASP.NET application.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.FluorineGateway.Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module that implements IHttpModule.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.FluorineGateway.context_BeginRequest(System.Object,System.EventArgs)">
            <summary>
            Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.FluorineGateway.application_PreRequestHandlerExecute(System.Object,System.EventArgs)">
            <summary>
            Occurs just before ASP.NET begins executing a handler such as a page or XML Web service.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.FluorineGateway.application_AuthenticateRequest(System.Object,System.EventArgs)">
            <summary>
            Occurs when a security module has established the identity of the user.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.SerializationFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.SerializationFilter.#ctor">
            <summary>
            Initializes a new instance of the SerializationFilter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Exceptions.ProtocolException">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.ProtocolException.#ctor">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.ProtocolException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProtocolException class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>			
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.ProtocolException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProtocolException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the innerException parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>	
            <remarks>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the InnerException property. The InnerException property returns the same value that is passed into the constructor, or a null reference (Nothing in Visual Basic) if the InnerException property does not supply the inner exception value to the constructor.</remarks>			
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Exceptions.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ProtocolException class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.FluorineAccessAllowedAttribute">
            <summary>
            The FluorineAccessAllowedAttribute is used to explicitly indicate to Fluorine
            that an assembly is for remote access. Fluorine will not resolve access to
            any class or method not in an assembly marked with this attribute.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.ActivationAttribute">
            <summary>
            Indicates whether a type is an activator. This class cannot be inherited.
            <seealso cref="T:com.TheSilentGroup.Fluorine.Activation.IActivator"/>
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ActivationAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ActivationAttribute class.
            </summary>
            <param name="activationMode"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx">
            <summary>Implementation of Dijkstra's PV Semaphore based on the Monitor class.</summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx._count">
            <summary>The number of units alloted by this semaphore.</summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx._semLock">
            <summary>Lock for the semaphore.</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx.#ctor">
            <summary> Initialize the semaphore as a binary semaphore.</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx.#ctor(System.Int32)">
            <summary> Initialize the semaphore as a counting semaphore.</summary>
            <param name="count">Initial number of threads that can take out units from this semaphore.</param>
            <exception cref="T:System.ArgumentException">Throws if the count argument is less than 0.</exception>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx.AddOne">
            <summary>V the semaphore (add 1 unit to it).</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx.WaitOne">
            <summary>P the semaphore (take out 1 unit from it).</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx.P">
            <summary>P the semaphore (take out 1 unit from it).</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx.V">
            <summary>V the semaphore (add 1 unit to it).</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.SemaphoreEx.Reset(System.Int32)">
            <summary>Resets the semaphore to the specified count.  Should be used cautiously.</summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.WaitingCallback">
            <summary>Used to hold a callback delegate and the state for that delegate.</summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.WaitingCallback._callback">
            <summary>Callback delegate for the callback.</summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.WaitingCallback._state">
            <summary>State with which to call the callback delegate.</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.WaitingCallback.#ctor(System.Threading.WaitCallback,System.Object)">
            <summary>Initialize the callback holding object.</summary>
            <param name="callback">Callback delegate for the callback.</param>
            <param name="state">State with which to call the callback delegate.</param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.WaitingCallback.Callback">
            <summary>Gets the callback delegate for the callback.</summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.WaitingCallback.State">
            <summary>Gets the state with which to call the callback delegate.</summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx">
            <summary>
            Managed threadpool.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx._maxWorkerThreads">
            <summary>Maximum number of threads the thread pool has at its disposal.</summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx._waitingCallbacks">
            <summary>Queue of all the callbacks waiting to be executed.</summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx._workerThreadNeeded">
            <summary>
            Used to signal that a worker thread is needed for processing.  Note that multiple
            threads may be needed simultaneously and as such we use a semaphore instead of
            an auto reset event.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx._workerThreads">
            <summary>List of all worker threads at the disposal of the thread pool.</summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx._inUseThreads">
            <summary>Number of threads currently active.</summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx._poolLock">
            <summary>Lockable object for the pool.</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.Initialize">
            <summary>Initializes the thread pool.</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>Queues a user work item to the thread pool.</summary>
            <param name="callback">
            A WaitCallback representing the delegate to invoke when the thread in the 
            thread pool picks up the work item.
            </param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>Queues a user work item to the thread pool.</summary>
            <param name="callback">
            A WaitCallback representing the delegate to invoke when the thread in the 
            thread pool picks up the work item.
            </param>
            <param name="state">
            The object that is passed to the delegate when serviced from the thread pool.
            </param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.Reset">
            <summary>Empties the work queue of any queued work items.  Resets all threads in the pool.</summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.ProcessQueuedItems">
            <summary>A thread worker function that processes items from the work queue.</summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.MaxThreads">
            <summary>Gets the number of threads at the disposal of the thread pool.</summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.ActiveThreads">
            <summary>Gets the number of currently active threads in the thread pool.</summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.WaitingCallbacks">
            <summary>Gets the number of callback delegates currently waiting in the thread pool.</summary>
        </member>
        <member name="E:com.TheSilentGroup.Fluorine.SystemHelpers.Threading.ThreadPoolEx.UnhandledException">
            <summary>Event raised when there is an exception on a threadpool thread.</summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.AuthenticationService">
            <summary>
            Summary description for AuthenticationService.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpProtocolEncoder">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Stream.IStream">
            <summary>
            Summary description for IStream.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IContext">
            <summary>
            Summary description for IContext.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IContext.ResolveScope(System.String)">
            <summary>
            Returns scope by path. You can think of IScope as of tree items, used to
            separate context and resources between users.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IContext.GetGlobalScope">
            <summary>
            Returns global scope reference.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IContext.GetClientRegistry">
            <summary>
            Get client registry. Client registry is a place where all clients are registered.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IContext.GetPersistanceStore">
            <summary>
            Gets persistence store object, a storage for persistent objects like
            persistent SharedObjects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IContext.LookupScopeHandler(System.String)">
            <summary>
            Returns scope handler (object that handler all actions related to the scope) by path.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IContext.GetServiceInvoker">
            <summary>
            Returns service invoker object. Service invokers are objects that make
            service calls to client side NetConnection objects.
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Invocation.IInvocationResultHandler">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.ExceptionASO">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ExceptionASO.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the ExceptionASO class.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.ListComparer">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler">
            <summary>
            Specifies an assembler interface which gets data from a data resource and handles the synchronization 
            of data among clients and the data resource.
            <br/><br/>
            An assembler must have a zero-argument constructor.<br/><br/>
            It is recommended that you extend the Assembler class, instead of directly implementing this interface.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.AddItemToFill(System.Collections.IList,System.Int32,System.Collections.Hashtable)">
            <summary>
            Called when a client adds an item to a filled collection.
            </summary>
            <param name="fillParameters">The list of parameters which identify the fill that the client changed.</param>
            <param name="position">The index where a new item was added.</param>
            <param name="identity">The identity of the item added at the specified position.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.AutoRefreshFill(System.Collections.IList)">
            <summary>
            This method can be used to help control how fill methods are refreshed.
            </summary>
            <param name="fillParameters">Client-side parameters to a fill method that created a managed collection still managed by one or more clients.</param>
            <returns>true if the fill identified by the fill parameters should be auto-refreshed or false if auto-refresh is off for this fill.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.Count(System.Collections.IList)">
            <summary>
            Retrieve the number of items for a given query with the supplied parameters.
            </summary>
            <param name="countParameters">A list of parameters to the count method provided by the client invocation.</param>
            <returns>The number of items in the collection specified by the countParameters.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.CreateItem(System.Object)">
            <summary>
            Creates the item. Often, you fill in the identity properties unless those values were supplied by the client. 
            </summary>
            <param name="item">The initial instance of the item to create.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.DeleteItem(System.Object)">
            <summary>
            This is called when the client application removes an item managed by the destination corresponding to this assembler. 
            </summary>
            <param name="previousVersion">The original version of the item on the client which the client intends to remove.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.Fill(System.Collections.IList)">
            <summary>
            This method is called by for any fill methods called by the client which are not configured in the configuration file explicitly using the fill-method tag.
            </summary>
            <param name="list">The list of fill parameters provided to the DataService.fill method on the client. Note that the first parameter - the ArrayCollection is not included in this list.</param>
            <returns>A collection containing a list of items to be managed by the client. This collection should contain instances which all have valid identity properties and should not contain more than one instance with the same identity.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.GetItem(System.Collections.Hashtable)">
            <summary>
            Retrieves an item with the specified identity.
            </summary>
            <param name="identity">A Hashtable which contains key/value pairs for each identity property.</param>
            <returns>The item corresponding to this identity property or null if there is no item for this identity.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.GetItems(System.Collections.IList)">
            <summary>
            Given a list of identities, returns the list of items.
            </summary>
            <param name="identityList">A list of Hashtable objects specifying the list of items.</param>
            <returns>The list of items corresponding to the list of identities specified. If an item is not found, a null value should be placed into the list to indicate that.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.RefreshFill(System.Collections.IList,System.Object,System.Boolean)">
            <summary>
            If your fill methods are auto-refreshed, this method is called for each item that changes (either created or updated as indicated by the isCreate parameter).
            </summary>
            <param name="fillParameters">The parameters which identify a fill method that is still actively being managed by one or more clients connected to this server.</param>
            <param name="item">The item which is being created or updated in a recently committed transaction.</param>
            <param name="isCreate">true if this item was just created operation, false if it was just updated.</param>
            <returns>Assembler.DoNotExecuteFill - do nothing, Assembler.ExecuteFill - re-run the fill method to get the new list, Assembler.AppendToFill - just add it to the existing list, Assembler.RemoveFromFill - remove it from the sequence</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.RemoveItemFromFill(System.Collections.IList,System.Int32,System.Collections.Hashtable)">
            <summary>
            Called when a client removes an item from a filled collection.
            </summary>
            <param name="fillParameters">The list of parameters which identify the fill that the client changed.</param>
            <param name="position">The index where a new item was removed.</param>
            <param name="identity">The identity of the item removed at the specified position.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.IAssembler.UpdateItem(System.Object,System.Object,System.Collections.IList)">
            <summary>
            Updates the item. The newVersion is always going to be present and contains the new version of the item.
            The previousVersion contains any state required for maintaining the integrity of this instance.
            </summary>
            <param name="newVersion">The new version of the item with which to perform the update.</param>
            <param name="previousVersion">The original version of the item before these changes were made (used for conflict detection).</param>
            <param name="changes">The list of changed property names.</param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.PageSizeAttribute">
            <summary>
            Indicates that the result of a service method is pageable recordset.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.PageSizeAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the PageSizeAttribute class.
            </summary>
            <param name="pageSize">The number of records requested each time.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.PageSizeAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the PageSizeAttribute class.
            </summary>
            <param name="pageSize">The number of records requested each time.</param>
            <param name="offset">The offset of the first row to return.</param>
            <param name="limit">The maximum number of rows to return.</param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.PageSizeAttribute.PageSize">
            <summary>
            Gets the page size (number of records requested each time).
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.PageSizeAttribute.Offset">
            <summary>
            Gets the offset of the first row to return.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.PageSizeAttribute.Limit">
            <summary>
            Gets the maximum number of rows to return.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Activation.RequestActivator">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Activation.RequestActivator.#ctor">
            <summary>
            Initializes a new instance of the RequestActivator class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.MessageServer">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageServer.#ctor">
            <summary>
            Initializes a new instance of the MessageServer class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.ScopeResolver">
            <summary>
            Summary description for ScopeResolver.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeResolver">
            <summary>
            Summary description for IScopeResolver.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeResolver.ResolveScope(System.String)">
            <summary>
            Gets the scope for a given path.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScopeResolver.GlobalScope">
            <summary>
            Gets the global scope.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.IApplicationContext">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.IApplicationContext.ActivationMode">
            <summary>
            If specified this will overwrite activation mode specified via attributes.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Gateway.FluorineHttpApplicationContext">
            <summary>
            Summary description for FluorineHttpApplicationContext.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Gateway.FluorineHttpApplicationContext._isDisposed">
            <summary>
            Used to implement IDisposable.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Gateway.FluorineHttpApplicationContext.#ctor(System.Web.HttpApplication,com.TheSilentGroup.Fluorine.Messaging.MessageServer)">
            <summary>
            Initializes a new instance of the FilterChain class.
            </summary>
            <param name="httpApplication"></param>
            <param name="messageServer"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Gateway.FluorineHttpApplicationContext.Dispose">
            <summary>
            Implements the IDispose' method Dispose.
            Use the Dispose method of this interface to explicitly release unmanaged resources in conjunction with 
            the garbage collector. The consumer of an object can call this method when the object is no longer needed.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Gateway.FluorineHttpApplicationContext.Dispose(System.Boolean)">
            <summary>
            Implements the Dispose functionality.
            </summary>
            <param name="isDisposing"></param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Gateway.FluorineHttpApplicationContext.DynamicDirectory">
            <summary>
            Gets the directory that the assembly resolver used to probe for dynamically-created assemblies.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.DebugFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.DebugFilter.#ctor">
            <summary>
            Initializes a new instance of the DebugFilter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.AuthenticationFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.AuthenticationFilter.#ctor(com.TheSilentGroup.Fluorine.Messaging.Endpoints.EndpointBase)">
            <summary>
            Initializes a new instance of the AuthenticationFilter class.
            </summary>
            <param name="endpoint"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.AccessFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.AccessFilter.#ctor">
            <summary>
            Initializes a new instance of the AccessFilter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.Sequence">
            <summary>
            Summary description for Sequence.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler">
            <summary>
            Assembler base class.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.AppendToFill">
            <summary>
            Add this item onto the set of items in this filled collection if it is not already in the collection.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.DoNotExecuteFill">
            <summary>
            Do not execute the fill method for this newly updated or created item. 
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.ExecuteFill">
            <summary>
            Reexecute the fill method for this newly updated or created item. 
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.RemoveFromFill">
            <summary>
            Remove this item from the set of items in this filled collection if it is in the collection.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.#ctor">
            <summary>
            Initializes a new instance of the Assembler class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.AddItemToFill(System.Collections.IList,System.Int32,System.Collections.Hashtable)">
            <summary>
            Called when a client adds an item to a filled collection.
            </summary>
            <param name="fillParameters">The list of parameters which identify the fill that the client changed.</param>
            <param name="position">The index where a new item was added.</param>
            <param name="identity">The identity of the item added at the specified position.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.AutoRefreshFill(System.Collections.IList)">
            <summary>
            This method can be used to help control how fill methods are refreshed.
            </summary>
            <param name="fillParameters">Client-side parameters to a fill method that created a managed collection still managed by one or more clients.</param>
            <returns>true if the fill identified by the fill parameters should be auto-refreshed or false if auto-refresh is off for this fill.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.Count(System.Collections.IList)">
            <summary>
            Retrieve the number of items for a given query with the supplied parameters.
            </summary>
            <param name="countParameters">A list of parameters to the count method provided by the client invocation.</param>
            <returns>The number of items in the collection specified by the countParameters.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.CreateItem(System.Object)">
            <summary>
            Creates the item. Often, you fill in the identity properties unless those values were supplied by the client. 
            </summary>
            <param name="item">The initial instance of the item to create.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.DeleteItem(System.Object)">
            <summary>
            This is called when the client application removes an item managed by the destination corresponding to this assembler. 
            </summary>
            <param name="previousVersion">The original version of the item on the client which the client intends to remove.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.Fill(System.Collections.IList)">
            <summary>
            This method is called by for any fill methods called by the client which are not configured in the configuration file explicitly using the fill-method tag.
            </summary>
            <param name="list">The list of fill parameters provided to the DataService.fill method on the client. Note that the first parameter - the ArrayCollection is not included in this list.</param>
            <returns>A collection containing a list of items to be managed by the client. This collection should contain instances which all have valid identity properties and should not contain more than one instance with the same identity.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.GetItem(System.Collections.Hashtable)">
            <summary>
            Retrieves an item with the specified identity.
            </summary>
            <param name="identity">A Hashtable which contains key/value pairs for each identity property.</param>
            <returns>The item corresponding to this identity property or null if there is no item for this identity.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.GetItems(System.Collections.IList)">
            <summary>
            Given a list of identities, returns the list of items.
            </summary>
            <param name="identityList">A list of Hashtable objects specifying the list of items.</param>
            <returns>The list of items corresponding to the list of identities specified. If an item is not found, a null value should be placed into the list to indicate that.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.RefreshFill(System.Collections.IList,System.Object,System.Boolean)">
            <summary>
            If your fill methods are auto-refreshed, this method is called for each item that changes (either created or updated as indicated by the isCreate parameter).
            </summary>
            <param name="fillParameters">The parameters which identify a fill method that is still actively being managed by one or more clients connected to this server.</param>
            <param name="item">The item which is being created or updated in a recently committed transaction.</param>
            <param name="isCreate">true if this item was just created operation, false if it was just updated.</param>
            <returns>Assembler.DoNotExecuteFill - do nothing, Assembler.ExecuteFill - re-run the fill method to get the new list, Assembler.AppendToFill - just add it to the existing list, Assembler.RemoveFromFill - remove it from the sequence</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.RemoveItemFromFill(System.Collections.IList,System.Int32,System.Collections.Hashtable)">
            <summary>
            Called when a client removes an item from a filled collection.
            </summary>
            <param name="fillParameters">The list of parameters which identify the fill that the client changed.</param>
            <param name="position">The index where a new item was removed.</param>
            <param name="identity">The identity of the item removed at the specified position.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.Assemblers.Assembler.UpdateItem(System.Object,System.Object,System.Collections.IList)">
            <summary>
            Updates the item. The newVersion is always going to be present and contains the new version of the item.
            The previousVersion contains any state required for maintaining the integrity of this instance.
            </summary>
            <param name="newVersion">The new version of the item with which to perform the update.</param>
            <param name="previousVersion">The original version of the item before these changes were made (used for conflict detection).</param>
            <param name="changes">The list of changed property names.</param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.NullableTagHandler">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Configuration.NullableTagHandler.#ctor">
            <summary>
            Initializes a new instance of the NullableTagHandler class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.DataTableTypeAttribute">
            <summary>
            The DataTableTypeAttribute specifies the type of data in a DataTable.
            Rows will be serialized as a collection of strongly typed ASObjects (columns as properties).
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.DataTableTypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataTableTypeAttribute class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMFBody">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.AMFBody._ignoreResults">
            <summary>
            IgnoreResults is a flag to tell the serializer to ignore the results of the body message.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFBody.#ctor">
            <summary>
            Initializes a new instance of the AMFBody class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFBody.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the AMFBody class.
            </summary>
            <param name="target"></param>
            <param name="response"></param>
            <param name="content"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.ByteArrayConverter">
            <summary>
            Provides a type converter to convert ByteArray objects to and from various other representations.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overloaded. Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A Type that represents the type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A CultureInfo object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The Object to convert.</param>
            <param name="destinationType">The Type to convert the value parameter to.</param>
            <returns>An Object that represents the converted value.</returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.ByteArray">
            <summary>
            Flex ByteArray. The ByteArray class provides methods and properties to optimize reading, writing, and working with binary data.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.IDataInput">
            <summary>
            The IDataInput interface provides a set of methods for reading binary data.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadBoolean">
            <summary>
            Reads a Boolean from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadByte">
            <summary>
            Reads a signed byte from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadBytes(System.Byte[],System.UInt32,System.UInt32)">
            <summary>
            Reads length bytes of data from the byte stream or byte array. 
            </summary>
            <param name="bytes"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadDouble">
            <summary>
            Reads an IEEE 754 double-precision floating point number from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadFloat">
            <summary>
            Reads an IEEE 754 single-precision floating point number from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadInt">
            <summary>
            Reads a signed 32-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadObject">
            <summary>
            Reads an object from the byte stream or byte array, encoded in AMF serialized format. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadShort">
            <summary>
            Reads a signed 16-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadUnsignedByte">
            <summary>
            Reads an unsigned byte from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadUnsignedInt">
            <summary>
            Reads an unsigned 32-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadUnsignedShort">
            <summary>
            Reads an unsigned 16-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadUTF">
            <summary>
            Reads a UTF-8 string from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.IDataInput.ReadUTFBytes(System.UInt32)">
            <summary>
            Reads a sequence of length UTF-8 bytes from the byte stream or byte array, and returns a string. 
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.#ctor(com.TheSilentGroup.Fluorine.IApplicationContext,System.Byte[])">
            <summary>
            Initializes a new instance of the ByteArray class.
            </summary>
            <param name="applicationContext"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadBoolean">
            <summary>
            Reads a Boolean from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadByte">
            <summary>
            Reads a signed byte from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadBytes(System.Byte[],System.UInt32,System.UInt32)">
            <summary>
            Reads length bytes of data from the byte stream or byte array. 
            </summary>
            <param name="bytes"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadDouble">
            <summary>
            Reads an IEEE 754 double-precision floating point number from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadFloat">
            <summary>
            Reads an IEEE 754 single-precision floating point number from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadInt">
            <summary>
            Reads a signed 32-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadObject">
            <summary>
            Reads an object from the byte stream or byte array, encoded in AMF serialized format. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadShort">
            <summary>
            Reads a signed 16-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadUnsignedByte">
            <summary>
            Reads an unsigned byte from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadUnsignedInt">
            <summary>
            Reads an unsigned 32-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadUnsignedShort">
            <summary>
            Reads an unsigned 16-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadUTF">
            <summary>
            Reads a UTF-8 string from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.ByteArray.ReadUTFBytes(System.UInt32)">
            <summary>
            Reads a sequence of length UTF-8 bytes from the byte stream or byte array, and returns a string. 
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.AMF3.ByteArray.Length">
            <summary>
            Gets the length of the ByteArray object, in bytes.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.AMF3.ByteArray.Position">
            <summary>
            Gets or sets the current position, in bytes, of the file pointer into the ByteArray object.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.SocketListener">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.ResponseBody">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ResponseBody.#ctor">
            <summary>
            Initializes a new instance of the ResponseBody class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ResponseBody.#ctor(com.TheSilentGroup.Fluorine.AMFBody)">
            <summary>
            Initializes a new instance of the ResponseBody class.
            </summary>
            <param name="requestBody"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ResponseBody.#ctor(com.TheSilentGroup.Fluorine.AMFBody,System.Object)">
            <summary>
            Initializes a new instance of the ResponseBody class.
            </summary>
            <param name="requestBody"></param>
            <param name="content"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Security.GenericLoginCommand">
            <summary>
            Custom login adapter base class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.GenericLoginCommand.#ctor">
            <summary>
            Initializes a new instance of the GenericLoginCommand class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.GenericLoginCommand.Start">
            <summary>
            Called to initialize a login command prior to authentication/authorization requests.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.GenericLoginCommand.Stop">
            <summary>
            Called to free up resources used by the login command.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.GenericLoginCommand.Logout(System.Security.Principal.IPrincipal)">
            <summary>
            Attempts to log a user out from their session.
            </summary>
            <param name="principal">The principal to logout.</param>
            <returns>A Boolean value indicating whether the principal has been logged out.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.GenericLoginCommand.DoAuthorization(System.Security.Principal.IPrincipal,System.Collections.IList)">
            <summary>
            The gateway calls this method to perform programmatic authorization.
            </summary>
            <param name="principal">The principal being checked for authorization.</param>
            <param name="roles">A List of role names to check, all members should be strings.</param>
            <returns>A Boolean value indicating whether the principal has been authorized.</returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Security.GenericLoginCommand.DoAuthentication(System.String,System.Collections.Hashtable)">
            <summary>
            The gateway calls this method to perform programmatic, custom authentication.
            </summary>
            <param name="username">The principal being authenticated.</param>
            <param name="credentials">The credentials are passed as a Hashtable to allow for extra properties to be passed in the future. For now, only a "password" property is sent.</param>
            <returns>A principal object represents the security context of the user.</returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpWriter">
            <summary>
            Summary description for RtmpWriter.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMFWriter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the AMFReader class based on the supplied stream and using UTF8Encoding.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpReader">
            <summary>
            Summary description for RtmpReader.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMFReader">
            <summary>
            AMFReader reads binary data from the input stream.<br/>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the AMFReader class based on the supplied stream and using UTF8Encoding.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFReader.ReadData(System.Int32,com.TheSilentGroup.Fluorine.IApplicationContext)">
            <summary>
            Maps a type code to an access method.
            </summary>
            <param name="typeCode"></param>
            <param name="applicationContext"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFReader.ReadUInt16">
            <summary>
            Reads a 2-byte unsigned integer from the current stream using little endian encoding and advances the position of the stream by two bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFReader.ReadAMF3Data(System.Byte,com.TheSilentGroup.Fluorine.IApplicationContext)">
            <summary>
            Maps a type code to an access method.
            </summary>
            <param name="typeCode"></param>
            <param name="applicationContext"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFReader.ReadAMF3IntegerData">
            <summary>
            Handle decoding of the variable-length representation
            which gives seven bits of value per serialized byte by using the high-order bit 
            of each byte as a continuation flag.
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Invocation.IInvocationManager">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Invocation.IInvocationManager.Context">
            <summary>
            Gets a stack-based, user-defined storage area that is useful for communication between callback handlers.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Invocation.InvocationManager">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Diagnostic.HttpHeader">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Diagnostic.DebugEvent">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.SecurityTagHandler">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.ClassMappings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMFDeserializer">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFDeserializer.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the AMFDeserializer class.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Util.WsdlHelper">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Util.WsdlHelper.#ctor">
            <summary>
            Initializes a new instance of the WsdlHelper class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.IClientSocket">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.PageableResult">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.PageableResult.#ctor">
            <summary>
            Initializes a new instance of the PageableResult class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Messages.RemotingMessage">
            <summary>
            RemotingMessages are used to send RPC requests to a remote endpoint. These messages use the operation property to specify which method to call on the remote object. The destination property indicates what object/service should be used.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Messages.RPCMessage">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Messages.RPCMessage.#ctor">
            <summary>
            Initializes a new instance of the RPCMessage class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Messages.RemotingMessage.#ctor">
            <summary>
            Initializes a new instance of the RemotingMessage class.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.RemotingMessage.source">
            <summary>
            Gets or sets the underlying source of a RemoteObject destination.
            </summary>
            <remarks>
            This property is provided for backwards compatibility. The best practice, however, is 
            to not expose the underlying source of a RemoteObject destination on the client 
            and only one source to a destination. Some types of Remoting Services may even ignore 
            this property for security reasons.
            </remarks>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.RemotingMessage.operation">
            <summary>
            Gets or sets the name of the remote method/operation that should be called.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpHeader">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Gateway.AMFContext">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Gateway.AMFContext.#ctor(com.TheSilentGroup.Fluorine.IApplicationContext)">
            <summary>
            Initializes a new instance of the AMFContext class.
            </summary>
            <param name="applicationContext"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.DescribeServiceFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.DescribeServiceFilter.#ctor">
            <summary>
            Initializes a new instance of the DescribeServiceFilter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.ErrorResponseBody">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ErrorResponseBody.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponseBody class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ErrorResponseBody.#ctor(com.TheSilentGroup.Fluorine.AMFBody,System.String)">
            <summary>
            Initializes a new instance of the ErrorResponseBody class.
            </summary>
            <param name="requestBody"></param>
            <param name="error"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ErrorResponseBody.#ctor(com.TheSilentGroup.Fluorine.AMFBody,System.Exception)">
            <summary>
            Initializes a new instance of the ErrorResponseBody class.
            </summary>
            <param name="requestBody"></param>
            <param name="exception"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ErrorResponseBody.#ctor(com.TheSilentGroup.Fluorine.AMFBody,com.TheSilentGroup.Fluorine.Messaging.Messages.IMessage,System.Exception)">
            <summary>
            Initializes a new instance of the ErrorResponseBody class.
            </summary>
            <param name="requestBody"></param>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.ErrorResponseBody.#ctor(com.TheSilentGroup.Fluorine.AMFBody,com.TheSilentGroup.Fluorine.Messaging.Messages.IMessage,com.TheSilentGroup.Fluorine.Messaging.Messages.ErrorMessage)">
            <summary>
            Initializes a new instance of the ErrorResponseBody class.
            </summary>
            <param name="requestBody"></param>
            <param name="message"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.DataSyncException">
            <summary>
            A DataSyncException describes a data conflict that arises as a result of a client attempt to commit a "sync" DataService operation. It is propagated to the client, and handled as the trigger for a conflict event.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.MessageException">
            <summary>
            The MessageException class is used to report exceptions within the messaging system.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageException.#ctor">
            <summary>
            Initializes a new instance of the MessageException class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageException.#ctor(com.TheSilentGroup.Fluorine.ASObject)">
            <summary>
            Initializes a new instance of the MessageException class.
            </summary>
            <param name="extendedData">Additional information.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the MessageException class.
            </summary>
            <param name="inner">Reference to the inner exception that is the cause of this exception.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageException.#ctor(System.Exception,com.TheSilentGroup.Fluorine.ASObject)">
            <summary>
            Initializes a new instance of the MessageException class.
            </summary>
            <param name="inner">Reference to the inner exception that is the cause of this exception.</param>
            <param name="extendedData">Additional information.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageException.#ctor(com.TheSilentGroup.Fluorine.ASObject,System.String)">
            <summary>
            Initializes a new instance of the MessageException class with a specified error message.
            </summary>
            <param name="extendedData">Additional information.</param>
            <param name="message">The error message that explains the reason for the exception.</param>			
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.MessageException.#ctor(com.TheSilentGroup.Fluorine.ASObject,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MessageException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="extendedData">Additional information.</param>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">Reference to the inner exception that is the cause of this exception.</param>
            <remarks>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the InnerException property. The InnerException property returns the same value that is passed into the constructor, or a null reference (Nothing in Visual Basic) if the InnerException property does not supply the inner exception value to the constructor.</remarks>			
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.MessageException.FaultCode">
            <summary>
            Gets or sets the fault code for the error.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.MessageException.RootCause">
            <summary>
            Root cause for the error.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.MessageException.ExtendedData">
            <summary>
            Return additional information to the client as part of a message exception.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Data.DataSyncException.#ctor(System.Object,System.Collections.IList)">
            <summary>
            Initializes a new instance of the DataSyncException class.
            </summary>
            <param name="serverVersion">Version of the Object known to be in safe, correct state.</param>
            <param name="propertyNames">List of properties that are in conflict.</param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.DataSyncException.ServerObject">
            <summary>
            Gets the version of the Object known to be in safe, correct state.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.DataSyncException.PropertyNames">
            <summary>
            Gets list of properties that are in conflict.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.ImportNamespacesTagHandler">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Configuration.ImportNamespacesTagHandler.#ctor">
            <summary>
            Initializes a new instance of the ImportNamespacesTagHandler class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Services.RemotingService">
            <summary>
            Summary description for RemotingService.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpChannel">
            <summary>
            Summary description for RtmpChannel.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Exceptions.ClientRejectedException">
            <summary>
            Summary description for ClientRejectedException.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Event.Ping">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Event.Invoke">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Event.Notify">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Stream.IClientStream">
            <summary>
            Summary description for IClientStream.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Stream.IClientStream.StreamId">
            <summary>
            Gets stream id allocated in a connection.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.ISessionState">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Gateway.FilterChain">
            <summary>
            Summary description for FilterChain.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Gateway.FilterChain.#ctor(com.TheSilentGroup.Fluorine.Filter.IFilter)">
            <summary>
            Initializes a new instance of the FilterChain class.
            </summary>
            <param name="filter"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.ObjectProxy">
            <summary>
            Flex ObjectProxy class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.ServerSocketConnection">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Context">
            <summary>
            Summary description for Context.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.DataService">
            <summary>
            Summary description for DataService.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.CacheResult">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.CacheResult.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the CacheResult class.
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.TypeHelper">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Remoting.RemotingAdapter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.ProcessFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.ProcessFilter.#ctor(com.TheSilentGroup.Fluorine.Messaging.Endpoints.EndpointBase)">
            <summary>
            Initializes a new instance of the ProcessFilter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage">
            <summary>
            DataMessage transports an operation that occured on a managed object or collection. This class of message is transmitted between clients subscribed to a remote destination.
            The message describes all of the relevant details of the operation (used to replicate updates and detect conflicts).
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.CreateOperation">
            <summary>
            Indicates a create operation.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.FillOperation">
            <summary>
            This operation requests that the remote destination create a sequence using 
            the remote destination's adapter.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.GetOperation">
            <summary>
            This operation requests that the remote destination get a specific managed object based on its unique ID.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.UpdateOperation">
            <summary>
            This operation indicates an update to data object has been performed.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.DeleteOperation">
            <summary>
            This operation indicates that the specified item should be removed.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.BatchedOperation">
            <summary>
            This operation represents a set of batched operations to be performed as a single unit.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.MultiBatchOperation">
            <summary>
            This operation represents a set of operations to be performed as a single unit but 
            which may contain multiple batched, create, update or delete operations that involve 
            more than one destination, that is, more than one remote adapter.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.TransactedOperation">
            <summary>
            This operation is similar to the MultiBatchOperation with the addition that the server 
            should encapsulate the multiple batches of messages within a transacation.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.PageOperation">
            <summary>
            This operation is used to retrieve a page of sequenced content that is delivered across 
            several messages instead of in a single message.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.GetOrCreateOperation">
            <summary>
            This operation requests an item with the specified identity from the remote destination.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.CountOperation">
            <summary>
            This operation requests that a configured &lt;count-method&gt; be invoked on a remote destination.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.CreateAndSequenceOperation">
            <summary>
            This operation requests a create of the specified item from a remote destination.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.GetSequenceIdOperation">
            <summary>
            This operation requests a sequence id for a set of fill parameters.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.AssociationAddOperation">
            <summary>
            This operation requests the remote destination add a new association between the specified instances.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.AssociationRemoveOperation">
            <summary>
            This operation requests the remote destination remove an association between the specified instances.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.UpdateCollectionOperation">
            <summary>
            This operation is sent when a local or remote sequence has been modified by insert(s) or delete(s).
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.ReleaseCollectionOperation">
            <summary>
            This operation indicates that the client is no longer interested in receiving notificaion of operations performed on the specified collection.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.ReleaseItemOperation">
            <summary>
            This operation indicates that the client is no longer interested in receiving notification of operations performed on the specified item.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.PageItemsOperation">
            <summary>
            This operation indicates a request for a page of items specified by identities.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.UpdateBodyChanges">
            <summary>
            This constant is used to access the list of changed property names.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.UpdateBodyPrev">
            <summary>
            This constant is used to access the previous value of the changed item.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.UpdateBodyNew">
            <summary>
            This constant is used to access the new value of a changed item.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.operation">
            <summary>
            Gets or sets the operation/command of this DataMessage.
            Operations indicate how the remote destination should process this message. 
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.DataMessage.identity">
            <summary>
            Gets or sets the identity hash which defines the unique identity of the item affected by this DataMessage 
            (relevant for create/update/delete but not fill operations). 
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.ListHashCodeProvider">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.CacheMap">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.DataSetTypeAttribute">
            <summary>
            The DataSetTypeAttribute specifies the types of data in a DataSet.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMFHeader">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFHeader.#ctor(System.String,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the AMFHeader class.
            </summary>
            <param name="name"></param>
            <param name="mustUnderstand"></param>
            <param name="content"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.StatusASO">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.StatusASO.#ctor">
            <summary>
            Initializes a new instance of the StatusASO class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.StatusASO.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the StatusASO class.
            </summary>
            <param name="code"></param>
            <param name="level"></param>
            <param name="description"></param>
            <param name="application"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Exceptions.ScopeNotFoundException">
            <summary>
            Summary description for ScopeNotFoundException.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Exceptions.ScopeNotFoundException.#ctor(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IScope,System.String)">
            <summary>
            Initializes a new instance of the ScopeNotFoundException class.
            </summary>
            <param name="scope"></param>
            <param name="childName"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Config.ServerSettings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.IAdapter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Diagnostic.TraceHeader">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.NetDebug">
            <summary>
            NetDebug remote trace.<br/>
            Lets you control the information that appears in the NetConnection Debugger.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.NetDebug.#ctor">
            <summary>
            Initializes a new instance of the NetDebug class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.NetDebug.#cctor">
            <summary>
            Initializes a new instance of the NetDebug class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.NetDebug.Trace(System.String)">
            <summary>
            Displays a trace message in the NetConnection Debugger.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.NetDebug.Trace(System.Object)">
            <summary>
            Displays an object in the NetConnection Debugger.
            </summary>
            <param name="obj">Object to display.</param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.NetDebug.Clear">
            <summary>
            Clear messages collected to display.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Diagnostic.AMFRequestHeaders">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.CachedBody">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.CachedBody.#ctor(com.TheSilentGroup.Fluorine.AMFBody,System.Object)">
            <summary>
            Initializes a new instance of the CachedBody class.
            </summary>
            <param name="requestBody"></param>
            <param name="content"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Messages.ErrorMessage">
            <summary>
            The ErrorMessage class is used to report errors within the messaging system.
            An error message only occurs in response to a message sent within the system.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Messages.ErrorMessage.#ctor">
            <summary>
            Initializes a new instance of the ErrorMessage class.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.ErrorMessage.faultCode">
            <summary>
            The fault code for the error. 
            This value typically follows the convention of "[outer_context].[inner_context].[issue]".
            
            For example: "Channel.Connect.Failed", "Server.Call.Failed"
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.ErrorMessage.faultString">
            <summary>
            A simple description of the error.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.ErrorMessage.faultDetail">
            <summary>
            Detailed description of what caused the error. This is typically a stack trace from the remote destination
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Messages.ErrorMessage.rootCause">
            <summary>
            Root cause for the error.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.So.ISharedObjectListener">
            <summary>
            Summary description for ISharedObjectListener.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.MessageOutput">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.MessageOutput.#ctor">
            <summary>
            Initializes a new instance of the MessageOutput class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.MessageOutput.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the MessageOutput class.
            </summary>
            <param name="version"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.MessageFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.DeserializationFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.DeserializationFilter.#ctor">
            <summary>
            Initializes a new instance of the DeserializationFilter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.ClassMapping">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Configuration.ClassMapping.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ClassMapping class.
            </summary>
            <param name="type"></param>
            <param name="customClass"></param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Configuration.ClassMapping.Type">
            <summary>
            Gets the type name (the .Net class name).
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Configuration.ClassMapping.CustomClass">
            <summary>
            Gets the custom class name (class name in AS)
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.CustomTagHandler">
            <summary>
            Retrieves custom tags from the configuration file.
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Configuration.CustomTagHandler.#ctor">
            <summary>
            Initializes a new instance of the CustomTagHandler class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer">
            <summary>
            Summary description for ByteBuffer.
            http://java.sun.com/j2se/1.5.0/docs/api/java/nio/ByteBuffer.html
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Allocate(System.Int32)">
            <summary>
            Allocates a new byte buffer.
            The new buffer's position will be zero, its limit will be its capacity, 
            and its mark will be undefined. 
            It will have a backing array, and its array offset will be zero. 
            </summary>
            <param name="capacity"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Wrap(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Wraps a byte array into a buffer.
            The new buffer will be backed by the given byte array; that is, modifications 
            to the buffer will cause the array to be modified and vice versa. 
            The new buffer's capacity will be array.length, its position will be offset, 
            its limit will be offset + length, and its mark will be undefined.
            </summary>
            <param name="array"></param>
            <param name="offset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Wrap(System.Byte[])">
            <summary>
            Wraps a byte array into a buffer. 
            The new buffer will be backed by the given byte array; that is, modifications 
            to the buffer will cause the array to be modified and vice versa. 
            The new buffer's capacity and limit will be array.length, its position will be zero,
            and its mark will be undefined.
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Flip">
            <summary>
            Flips this buffer. The limit is set to the current position and then 
            the position is set to zero. If the mark is defined then it is discarded.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Rewind">
            <summary>
            Rewinds this buffer. The position is set to zero and the mark is discarded.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Put(System.Byte)">
            <summary>
            Writes the given byte into this buffer at the current position, and then increments the position.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Put(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Relative bulk put method.
            
            This method transfers bytes into this buffer from the given source array. 
            If there are more bytes to be copied from the array than remain in this buffer, 
            that is, if length > remaining(), then no bytes are transferred and a 
            BufferOverflowException is thrown. 
            
            Otherwise, this method copies length bytes from the given array into this buffer, 
            starting at the given offset in the array and at the current position of this buffer. 
            The position of this buffer is then incremented by length. 
            </summary>
            <param name="src"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Put(System.Byte[])">
            <summary>
            This method transfers the entire content of the given source byte array into this buffer. 
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Put(com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer)">
            <summary>
            This method transfers the bytes remaining in the given source buffer into this buffer. 
            If there are more bytes remaining in the source buffer than in this buffer, 
            that is, if src.remaining() > remaining(), then no bytes are transferred 
            and a BufferOverflowException is thrown. 
            
            Otherwise, this method copies n = src.remaining() bytes from the given buffer into this buffer, 
            starting at each buffer's current position. The positions of both buffers are then 
            incremented by n. 
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Put(System.Int32,System.Byte)">
            <summary>
            Absolute put method.
            Writes the given byte into this buffer at the given index. 
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Get">
            <summary>
            Relative get method. Reads the byte at this buffer's current position, and then increments the position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Get(System.Int32)">
            <summary>
            Absolute get method. Reads the byte at the given index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Compact">
            <summary>
            Compacts this buffer
            
            The bytes between the buffer's current position and its limit, if any, 
            are copied to the beginning of the buffer. That is, the byte at 
            index p = position() is copied to index zero, the byte at index p + 1 is copied 
            to index one, and so forth until the byte at index limit() - 1 is copied 
            to index n = limit() - 1 - p. 
            The buffer's position is then set to n+1 and its limit is set to its capacity. 
            The mark, if defined, is discarded. 
            The buffer's position is set to the number of bytes copied, rather than to zero, 
            so that an invocation of this method can be followed immediately by an invocation of 
            another relative put method. 
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Skip(System.Int32)">
            <summary>
            Forwards the position of this buffer as the specified size bytes.
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.ReadBytes(System.Int32)">
            <summary>
            Reads count bytes from the current stream into a byte array and advances the current position by count bytes. 
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Put(com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer,com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer,System.Int32)">
            <summary>
            Puts an in buffer stream onto an out buffer stream and returns the bytes written.
            </summary>
            <param name="output"></param>
            <param name="input"></param>
            <param name="numBytesMax"></param>
            <returns></returns>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.AutoExpand">
            <summary>
            Turns on or off autoExpand
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Capacity">
            <summary>
            Returns this buffer's capacity.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Limit">
            <summary>
            Returns this buffer's limit. 
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.Remaining">
            <summary>
            Returns the number of elements between the current position and the limit. 
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.SystemHelpers.IO.ByteBuffer.HasRemaining">
            <summary>
            Tells whether there are any elements between the current position and the limit. 
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpService">
            <summary>
            Summary description for RtmpService.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpServer">
            <summary>
            Summary description for Server.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.RtmpProtocolDecoder">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.ApplicationAdapter">
            <summary>
            Summary description for ApplicationAdapter.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.ApplicationAdapter.AppConnect(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IConnection,System.Object[])">
            <summary>
            Handler method. Called every time new client connects (that is, new
            IConnection object is created after call from a SWF movie) to the
            application.
            
            You override this method to pass additional data from client to server
            application using <code>NetConnection.connect</code> method.
            </summary>
            <param name="conn"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.ApplicationAdapter.RoomConnect(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IConnection,System.Object[])">
            <summary>
            Handler method. Called every time new client connects (that is, new
            IConnection object is created after call from a SWF movie) to the
            application.
            </summary>
            <param name="conn"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IPendingServiceCallback">
            <summary>
            Summary description for IPendingServiceCallback.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IPendingServiceCallback.ResultReceived(com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.Service.IPendingServiceCall)">
            <summary>
            Triggered when results are recieved.
            </summary>
            <param name="call"></param>
        </member>
        <member name="T:flex.messaging.endpoints.RTMPEndpoint">
            <summary>
            Summary description for RTMPEndpoint.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Invocation.InvocationHandler">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Invocation.InvocationHandler.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Initializes a new instance of the InvocationHandler class.
            </summary>
            <param name="methodInfo"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Gateway.HttpSessionStateWrapper">
            <summary>
            Summary description for DefaultSessionState.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.ServiceMapFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.ServiceMapFilter.#ctor(com.TheSilentGroup.Fluorine.Messaging.Endpoints.EndpointBase)">
            <summary>
            Initializes a new instance of the ServiceMapFilter class.
            </summary>
            <param name="endpoint"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.ASPXAdapter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.ASPXAdapter.#ctor">
            <summary>
            Initializes a new instance of the ASPXAdapter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.MessageContext">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.ServiceEntry">
            <summary>
            Specifies a service entry.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.ServiceTagHandler">
            <summary>
            Retrieves custom tags from the configuration file.
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Configuration.ServiceTagHandler.#ctor">
            <summary>
            Initializes a new instance of the ServiceTagHandler class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Configuration.CacheTagHandler">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Configuration.CacheTagHandler.#ctor">
            <summary>
            Initializes a new instance of the CacheTagHandler class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMFSerializer">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMFSerializer.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the AMFSerializer class.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.AMF3.DataInput">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadBoolean">
            <summary>
            Reads a Boolean from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadByte">
            <summary>
            Reads a signed byte from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadBytes(System.Byte[],System.UInt32,System.UInt32)">
            <summary>
            Reads length bytes of data from the byte stream or byte array. 
            </summary>
            <param name="bytes"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadDouble">
            <summary>
            Reads an IEEE 754 double-precision floating point number from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadFloat">
            <summary>
            Reads an IEEE 754 single-precision floating point number from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadInt">
            <summary>
            Reads a signed 32-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadObject">
            <summary>
            Reads an object from the byte stream or byte array, encoded in AMF serialized format. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadShort">
            <summary>
            Reads a signed 16-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadUnsignedByte">
            <summary>
            Reads an unsigned byte from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadUnsignedInt">
            <summary>
            Reads an unsigned 32-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadUnsignedShort">
            <summary>
            Reads an unsigned 16-bit integer from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadUTF">
            <summary>
            Reads a UTF-8 string from the byte stream or byte array. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.AMF3.DataInput.ReadUTFBytes(System.UInt32)">
            <summary>
            Reads a sequence of length UTF-8 bytes from the byte stream or byte array, and returns a string. 
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.SystemHelpers.Net.MessageBuffer">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.StringWriterWithEncoding">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.StringWriterWithEncoding.#ctor(System.Text.StringBuilder,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the StringWriterWithEncoding class.
            </summary>
            <param name="sb"></param>
            <param name="encoding"></param>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase">
            <summary>
            Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.
            protocol://user:password?host:port/path?param1=value&amp;param2=value2&amp;...
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.#ctor(com.TheSilentGroup.Fluorine.Messaging.Util.UriBase)">
            <summary>
            Initializes a new instance of the UriBase class.
            </summary>
            <param name="uri"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.#ctor">
            <summary>
            Initializes a new instance of the UriBase class.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UriBase class.
            </summary>
            <param name="uri"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the UriBase class.
            </summary>
            <param name="user"></param>
            <param name="password"></param>
            <param name="path"></param>
            <param name="host"></param>
            <param name="protocol"></param>
            <param name="port"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the UriBase class.
            </summary>
            <param name="user"></param>
            <param name="password"></param>
            <param name="path"></param>
            <param name="host"></param>
            <param name="protocol"></param>
            <param name="port"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.ParseUri(System.String)">
            <summary>
            Parse the uri.
            </summary>
            <param name="uri"></param>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.EqualTo(com.TheSilentGroup.Fluorine.Messaging.Util.UriBase)">
            <summary>
            Returns whether the value of the called object is equal to that of the given object.
            Equality here means if all the fields are the same.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.CopyTo(com.TheSilentGroup.Fluorine.Messaging.Util.UriBase)">
            <summary>
            Copy content of this object into the given object.
            </summary>
            <param name="uri"></param>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.Path">
            <summary>
            Gets or sets the path specified in the url.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.Host">
            <summary>
            Gets or sets the host specified in the url.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.Parameters">
            <summary>
            Gets or sets the additional parameters specified in the url.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.Password">
            <summary>
            Gets or sets the host password in the url.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.Port">
            <summary>
            Gets or sets the port specified in the url.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.Protocol">
            <summary>
            Gets or sets the protocol specified in the url.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Messaging.Util.UriBase.User">
            <summary>
            Gets or sets user specified in the url.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Client">
            <summary>
            Summary description for Client.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Endpoints.Rtmp.Api.IClient">
            <summary>
            Summary description for IClient.
            </summary>
        </member>
        <member name="T:flex.messaging.endpoints.AMFEndpoint">
            <summary>
            Summary description for AMFEndpoint.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Messaging.Config.DestinationSettings">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.LibraryAdapter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:com.TheSilentGroup.Fluorine.Filter.LibraryAdapter.#ctor(com.TheSilentGroup.Fluorine.Messaging.Endpoints.EndpointBase)">
            <summary>
            Initializes a new instance of the LibraryAdapter class.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Filter.CacheFilter">
            <summary>
            This type supports the Fluorine infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.UpdateCollectionRange">
            <summary>
            The UpdateCollectionRange class provides specific information about a range 
            of add and remove operations made to a collection. 
            These objects are associated with a specific UpdateCollectionMessage and 
            are carried in an Array on its body property.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.UpdateCollectionRange.DeleteFromCollection">
            <summary>
            Indicates a range of items that have been deleted from the collection.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.UpdateCollectionRange.InsertIntoCollection">
            <summary>
            Indicates a range of items have been inserted into the collection.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.UpdateCollectionRange.identities">
            <summary>
            An Array of identity objects that represent which items were either 
            deleted or inserted in the associated collection starting at the position 
            indicated by the position property.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.UpdateCollectionRange.position">
            <summary>
            Indicates the begining index for the range of updates made to the associated collection. 
            The updateType indicates if the range was an insert or a remove operation. 
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.UpdateCollectionRange.updateType">
            <summary>
            Indicates what operation this range represents.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.Data.Messages.UpdateCollectionMessage">
            <summary>
            This message is used to establish consistency between the remote sequence and the 
            corresponding local collection. It contains all insert and delete operations that 
            were performed on a collection. 
            Clients send this message when a local collection is updated using the collection API 
            (IListView.removeItemAt(), etc) or the Single Managed Object API (DataService.createItem()). 
            The remote destination sends this message when the remote sequence is updated 
            and items are moved or removed and inserted. 
            This body property contains a list of UpdateCollectionRange objects that indicate just 
            how the collection was modified. 
            Applying the update collection ranges inorder will establish a consistent ordering of the items within the specified collection. 
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.UpdateCollectionMessage.ClientUpdate">
            <summary>
             Indicates this update collection message was client generated.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.UpdateCollectionMessage.ServerOverride">
            <summary>
            Indicates this update collection message was client generated and the 
            remote destination determined that it should be reverted on that client.
            </summary>
        </member>
        <member name="F:com.TheSilentGroup.Fluorine.Data.Messages.UpdateCollectionMessage.ServerUpdate">
            <summary>
            Indicates this update collection message was remotely generated and is 
            based on the current state of the remote sequence.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.UpdateCollectionMessage.collectionId">
            <summary>
            The unique identifier for the collection that was updated. 
            For a collection filled with the DataService.fill() method this contains 
            and Array of the parameters specified.
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.UpdateCollectionMessage.replace">
            <summary>
            Indicates if the entire collection should be replaced by the contents of this message.
            When the number of changes to a remote sequence have reached a tipping point a 
            replace message is generated as an optimization. 
            When true the body property contains an Array of item identities that should 
            replace any existing items. 
            </summary>
        </member>
        <member name="P:com.TheSilentGroup.Fluorine.Data.Messages.UpdateCollectionMessage.updateMode">
            <summary>
            Indicates the state of this update. The remote destination sends update collection messages 
            to clients with one of three update modes: 
            ServerUpdate - client applies this update collection unconditionally 
            ClientUpdate - the committing client does not need to process this update collection. 
            ServerOverride - the remote destination modified the update collection message sent by the client and the committing client must revert this update collection. 
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.CustomMemberMapper">
            <summary>
            Provides for mapping custom object members when translating between Flash and .NET.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.ICustomMemberMapper">
            <summary>
            All custom member name mappers must implement this interface.
            </summary>
        </member>
        <member name="T:com.TheSilentGroup.Fluorine.FirstCapMemberMapper">
            <summary>
            Provides member mapping where .NET uses first-capital and Flash uses first-lower case
            member names.
            </summary>
        </member>
    </members>
</doc>
